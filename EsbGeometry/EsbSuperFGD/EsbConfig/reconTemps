# This holds the tempaltes used to identify leafs and next hit to traverge when using a graph
#   for track identification.
#   The syntax is the following:
#   First row defines whether the next is a template for a Leaf of for next node - Leaf or GetNextNode respectively.
#   We use local hits, this the cubes size is 3x3x3 with the current hit in the middle.
#   To define the template the first 9 are the cubes at Z-1 coordinates, than at Z and than at Z+1.
#   'O' (letter O) or '-' is used for no hit, 'X' is for hit, 'P' is used in GetNextNode templates to denote previous node
#   'N' is used in GetNextNode templates to denote next node, 'C' denotes center cube position. ONE space is used to separate the matrixes

#   Hits with one nearby hits are considered leaves by default. The leaves with
#   One hit are listed here for completion.

# This is the initial position, to match 23 permutations of the defined templare are made
#   in X,Y,Z axis to covered all possibilities


#########################################################
#######                  Permutations             #######
#########################################################
#
#        The following are the permutations used for each templates
#        defined for Leaves and GetNextNodes - vec is a TVector3 object
#        and the cases below show which rotations are used for the permutations.
#
#        case 0:
#                // No rotation
#                break;
#        case 1:
#                vec.RotateZ(rot90deg);
#                break;
#        case 2:
#                vec.RotateZ(2*rot90deg);
#                break;
#        case 3:
#                vec.RotateZ(3*rot90deg);
#                break;
#        case 4:
#                vec.RotateY(rot90deg);
#                break;
#        case 5:
#                vec.RotateY(rot90deg);
#                vec.RotateX(rot90deg);
#                break;
#        case 6:
#                vec.RotateY(rot90deg);
#                vec.RotateX(2*rot90deg);
#                break;
#        case 7:
#                vec.RotateY(rot90deg);
#                vec.RotateX(3*rot90deg);
#                break;
#        case 8:
#                vec.RotateY(2*rot90deg);
#                break;
#        case 9:
#                vec.RotateY(2*rot90deg);
#                vec.RotateZ(rot90deg);
#                break;
#        case 10:
#                vec.RotateY(2*rot90deg);
#                vec.RotateZ(2*rot90deg);
#                break;
#        case 11:
#                vec.RotateY(2*rot90deg);
#                vec.RotateZ(3*rot90deg);
#                break;
#        case 12:
#                vec.RotateY(3*rot90deg);
#                break;
#        case 13:
#                vec.RotateY(3*rot90deg);
#                vec.RotateX(rot90deg);
#                break;
#        case 14:
#                vec.RotateY(3*rot90deg);
#                vec.RotateX(2*rot90deg);
#                break;
#        case 15:
#                vec.RotateY(3*rot90deg);
#                vec.RotateX(3*rot90deg);
#                break;
#        case 16:
#                vec.RotateX(rot90deg);
#                break;
#        case 17:
#                vec.RotateX(rot90deg);
#                vec.RotateY(rot90deg);
#                break;
#        case 18:
#                vec.RotateX(rot90deg);
#                vec.RotateY(2*rot90deg);
#                break;
#        case 19:
#                vec.RotateX(rot90deg);
#                vec.RotateY(3*rot90deg);
#                break;
#        case 20:
#                vec.RotateX(-rot90deg);
#                break;
#        case 21:
#                vec.RotateX(-rot90deg);
#                vec.RotateY(rot90deg);
#                break;
#        case 22:
#                vec.RotateX(-rot90deg);
#                vec.RotateY(2*rot90deg);
#                break;
#        case 23:
#                vec.RotateX(-rot90deg);
#                vec.RotateY(3*rot90deg);
#                break;

#########################################################
#######                   Leaves                  #######
#########################################################
#Leaf 0
--- --- ---
--- -C- -X-
--- --- ---

#Leaf 1
--- --- -X-
--- -C- ---
--- --- ---

#Leaf 2
--- --- --X
--- -C- ---
--- --- ---

Leaf 3
--- --- -X-
--- -C- -X-
--- --- ---

Leaf 4
--- --- --X
--- -C- -X-
--- --- ---

Leaf 5
--- --- -XX
--- -C- -X-
--- --- ---

Leaf 6
--- --- XX-
--- -C- -X-
--- --- ---

Leaf 7
--- --- X--
--- -C- X--
--- --- ---

Leaf 8
--- --- --X
--- -C- --X
--- --- ---

#########################################################
#######                Next Nodes                 #######
#########################################################

GetNextNode 0
--- --- ---
-P- -C- -N-
--- --- ---

GetNextNode 1
--- --- ---
-P- -C- N--
--- --- ---

GetNextNode 2
--- --- -N-
-P- -C- ---
--- --- ---

GetNextNode 3
--- -N- ---
-P- -C- ---
--- --- ---

GetNextNode 4
--- --- ---
-P- -C- ---
--- -N- ---

GetNextNode 5
-P- --- ---
--- -C- -N-
--- --- ---

GetNextNode 6
-P- --- -N-
--- -C- ---
--- --- ---

GetNextNode 7
P-- --- --N
--- -C- ---
--- --- ---

GetNextNode 8
P-- --- ---
--- -C- -N-
--- --- ---

GetNextNode 9
--- --- --N
-P- -C- ---
--- --- ---

GetNextNode 10
--- --- ---
-P- -C- -N-
-X- --- ---

GetNextNode 11
--- --- ---
-P- -C- -N-
--- --- -X-

GetNextNode 12
--- --- ---
-P- -C- ---
--- -N- -X-

GetNextNode 13
--- -N- -X-
-P- -C- ---
--- --- ---

GetNextNode 14
--- -P- -X-
-N- -C- ---
--- --- ---

GetNextNode 15
--- -N- ---
--- -C- ---
-X- -P- ---

GetNextNode 16
--- --- ---
-P- -C- -N-
--- --- --X

GetNextNode 17
--- --- ---
-P- -C- -N-
X-- --- ---

GetNextNode 18
--- --- -N-
-P- -C- ---
-X- --- ---

GetNextNode 19
--- --- --N
-P- -C- ---
-X- --- ---

GetNextNode 20
--- --- N--
-P- -C- ---
-X- --- ---

GetNextNode 21
--- --- ---
-PX -C- -N-
--- --- -X-

GetNextNode 22
--- --- ---
XP- -C- -N-
--- --- -X-

GetNextNode 23
--- --- ---
-P- -C- -N-
-XX --- ---

GetNextNode 24
--- --- ---
-P- -C- -N-
XX- --- ---


GetNextNode 25
-X- --- ---
-P- -C- -N-
--- --- -X-

GetNextNode 26
-X- --- -X-
-P- -C- -N-
--- --- ---

GetNextNode 27
X-- --- ---
-P- -C- -N-
--- --- -X-

GetNextNode 28
X-- --- ---
-P- -C- -N-
--- --- --X

GetNextNode 29
X-- --- --X
-P- -C- -N-
--- --- ---

GetNextNode 30
--- --- ---
-P- -C- -N-
-XX --- ---

GetNextNode 31
--- --- ---
XN- -C- -P-
--- --- -X-

GetNextNode 32
--- --- ---
--- -CN -P-
--X --- ---


