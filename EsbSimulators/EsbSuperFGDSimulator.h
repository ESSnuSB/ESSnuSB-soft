#ifndef ESBROOT_SIMULATION_SUPERFGD_SIMULATOR_H
#define ESBROOT_SIMULATION_SUPERFGD_SIMULATOR_H 1


#include <iostream>
#include <fstream>
#include <exception>
#include <map>
#include <memory>

#include "EsbSimulators/EsbSuperFGD/EsbDetectorConstruction.h"
#include "EsbSimulators/EsbSuperFGD/EsbSuperFGDDetectorConstruction.h"
#include "EsbSimulators/EsbSuperFGD/EsbPrimaryGeneratorAction.h"
#include "EsbSimulators/EsbSuperFGD/EsbParticleGunPrimaryGenerator.h"
#include "EsbSimulators/EsbSuperFGD/EsbPhysicsList.h"
#include "EsbSimulators/EsbSuperFGD/EsbFgdStepAction.h"
#include "EsbSimulators/EsbSuperFGD/EsbRunAction.h"
#include "EsbSimulators/EsbSuperFGD/EsbEventAction.h"
#include "EsbSimulators/EsbSuperFGD/EsbFgdRunManager.h"
#include "EsbSimulators/EsbSuperFGD/EsbFileWriter.h"

#include "EsbTools/EsbDefines.h"

#include "G4RunManager.hh"
#include "G4UImanager.hh"
#include <G4UItcsh.hh>
#include <G4UIterminal.hh>

#ifdef G4VIS_USE
    #include "G4VisExecutive.hh"
#endif

#ifdef G4UI_USE
    #include "G4UIExecutive.hh"
#endif

#include "Randomize.hh"

class G4VUserPrimaryGeneratorAction;

namespace esbroot {
namespace simulators {

class SuperFGDSimulator 
{
public:
    /** Constructor
     *@param detectorGeomFile - file (fullpath) of file from which to read the detector geometry
     *@param outputFile - file (fullpath) where to write the result froom the simulation
     *@param genieFile - file (fullpath) from where to read events generated by genie
     *@param geant4GunFile - file (fullpath) from where to read events generated by geant4 gun
     *@param compLvl - geant4 compression level of the data
     **/
    SuperFGDSimulator(std::string detectorGeomFile, std::string outputFile,
                        std::string genieFile, std::string geant4GunFile, int compLvl);

    /** Destructor **/
    ~SuperFGDSimulator();

    /* Initialize the runmanager */
    void Init();

private:

    /* Validates if the constructor parameters are valid */
    void Validate();

    /* Checks if the full file path is an existing file */
    bool FileExists(std::string file);

    /* Full path to the detector geometry file */
    std::string fDetectorGeomFile;

    /* Full path to where the results of the simulation will be written */
    std::string fOutputFile;

    /* Full path of Genie generated events file */
    std::string fGenieFile;

    /* Full path of Geant4 gun settings */
    std::string fGunFile;

    /* Compression level of data */
    int fCompressionLevel;

    /* Number of events to read from genie of geant4 gun files */
    int fNumberOfEvents;

    /* The runManager for the simlation */
    std::shared_ptr<superfgd::FgdRunManager> fRunManager;
};

}   //simulators
}   //esbroot

#endif